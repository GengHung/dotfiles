DOTFILES_ROOT=`pwd`

# get a string escaping / & for later sed substitution
# usage:  var=$(get prompt message here) || exit 1
# note: need the exit as the ERROR only terminates the $() sub-shell
get()
{
  local default prompt data
  default="$1"; shift

  read -p "$* [${default}]: " -r data
  [ -z "${data}" ] && data="${default}"
  printf '%s' "${data}" | sed 's/\\/\\\\/g;s,/,\\/,g;s,&,\\\&,g'
}

# main program
echo "=> This will install the files to: ${HOME}"
echo -ne "\r=> "

config="${HOME}/.dotfilesrc"
name=
email=

if [ -f "${config}" ]; then
    . "${config}"
    echo "=> ${config} exists"
else
    echo "=> dotfilesrc not exists ..."
    echo "=> Enter some data for substitutions"
    echo -ne "\r=> "

    name=$(get "${name}" Enter full name) || exit 1
    email=$(get "${email}" Enter email address) || exit 1

    rm -f "${config}"
    echo '# .dotfilesrc' >> "${config}"
    echo '' >> "${config}"
    echo 'email='"'"${email}"'" >> "${config}"
    echo 'name='"'"${name}"'" >> "${config}"
fi

gitconfig="${HOME}/.gitconfig"

# if [ ! -f "${gitconfig}" ]; then
# default to overwrite gitconfig
echo "=> Configuring gitconfig ..."
echo -ne "\r=> "

# use sed to substitute som @VAR@ by values saved in ${config}
sed "s/@NAME@/${name}/g; s/@EMAIL@/${email}/g" git/gitconfig > "${gitconfig}"

cp git/git-global-ignore ~/.git-global-ignore
cp git/git-global-attributes ~/.git-global-attributes
# else
#     echo "=> ${gitconfig} exists"
# fi

echo "=> Copying PTMono fonts ..."
cp -fr fonts/PTMono/*ttf ~/Library/Fonts/

echo "=> Copying .zsh-theme ..."
cp -f theme/hanksudo.zsh-theme ~/.oh-my-zsh/themes/

echo "=> Copying .zshrc ..."
cp -f zsh/zshrc ~/.zshrc

echo "=> Copying .tmux.conf ..."
cp -f zsh/tmux.conf ~/.tmux.conf

# change shell to zsh
if [ $SHELL != '/bin/zsh' ]; then
    echo $SHELL
    chsh -s /bin/zsh
fi

echo "=> Copying .functions ..."
cp -f zsh/functions ~/.functions

# autojump - a faster way to navigate your filesystem
# https://github.com/joelthelion/autojump
echo "=> Installing autojump ..."
echo -ne "\r=> "
brew install autojump

# GNU core utilities
# Use **gls(coreutils)** instead of ls
echo "=> Installing GNU core utilities ..."
echo -ne "\r=> "
brew install coreutils

# ack 2.0 is a greplike tool optimized for programmers searching large heterogeneous trees of source code.
# https://github.com/petdance/ack2
echo "=> Installing ack2 ..."
echo -ne "\r=> "
brew install ack

# git-extras
# https://github.com/visionmedia/git-extras
echo "=> Installing git-extras ..."
echo -ne "\r=> "
brew install git-extras

# zsh-completions
# https://github.com/zsh-users/zsh-completions
echo "=> Installing zsh-completions ..."
echo -ne "\r=> "
brew install zsh-completions

# Ruby environment Manager
if ! type rvm > /dev/null; then
    echo "=> Installing rvm ..."
    echo -ne "\r=> "
    curl -L https://get.rvm.io | bash -s stable --ignore-dotfiles
else
    echo "=> rvm already installed"
fi

# zsh plugin - zsh syntax highlight
if [ ! -d ~/.oh-my-zsh/custom/plugins/zsh-syntax-highlighting ]
then
    echo "=> Installing zsh-syntax-highlighting ..."
    echo -ne "\r=> "
    git clone git://github.com/zsh-users/zsh-syntax-highlighting.git ~/.oh-my-zsh/custom/plugins/zsh-syntax-highlighting
fi

# tmux - terminal multiplexer
echo "=> Installing tmix ... "
echo -ne "\r=> "
brew install tmux

# install python libraries
echo "=> Installing python libs... "
echo -ne "\r=> "
sudo pip install --upgrade pip setuptools
sudo pip install -r ${DOTFILES_ROOT}/requirements.txt

echo "=> Done"
